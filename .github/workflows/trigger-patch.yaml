on:
  workflow_call:
    inputs:
      target-owner:
        description: The target repo owner.
        type: string
        default: nevivurn
      target-repo:
        description: The target repo.
        type: string
        default: cd-test-config
      target-workflow:
        description: The target workflow.
        type: string
        default: patch-application.yaml
      target-ref:
        description: The target workflow ref.
        type: string
        default: master

      application:
        description: The name of the application to be deployed.
        type: string
        required: true
      image:
        description: The image being deployed.
        type: string
        required: true
      tag:
        description: The image tag being deployed.
        type: string
        required: true

    secrets:
      github-token:
        description: GITHUB_TOKEN with repo access.
        required: true

jobs:
  trigger:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        env:
          TARGET_OWNER: ${{ inputs.target-owner }}
          TARGET_REPO: ${{ inputs.target-repo }}
          TARGET_WORKFLOW: ${{ inputs.target-workflow }}
          TARGET_REF: ${{ inputs.target-ref }}

          APPLICATION: ${{ inputs.application }}
          IMAGE: ${{ inputs.image }}
          TAG: ${{ inputs.tag }}
        with:
          github-token: ${{ secrets.github-token }}
          script: |
            const { TARGET_OWNER, TARGET_REPO, TARGET_WORKFLOW, TARGET_REF } = process.env
            const { APPLICATION, IMAGE, TAG } = process.env
            github.rest.actions.createWorkflowDispatch({
              owner: TARGET_OWNER,
              repo: TARGET_REPO,
              workflow_id: TARGET_WORKFLOW,
              ref: TARGET_REF,
              inputs: {
                application: APPLICATION,
                image: IMAGE,
                tag: TAG,
              },
            })
